{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","props","state","pressedKey","handleKeyUp","bind","document","addEventListener","this","removeEventListener","event","setState","key","className","Component","ReactDOM","render","getElementById"],"mappings":"kNAOaA,EAAb,kDAKE,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IALRC,MAAQ,CACNC,WAAY,IAMZ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHE,EALzB,qDAWE,WACEC,SAASC,iBAAiB,QAASC,KAAKJ,eAZ5C,kCAeE,WACEE,SAASG,oBAAoB,QAASD,KAAKJ,eAhB/C,yBAmBE,SAAYM,GACVF,KAAKG,SAAS,CAAER,WAAYO,EAAME,QApBtC,oBAuBE,WACE,IAAQT,EAAeK,KAAKN,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BV,EAAU,mCAA+BA,EAA/B,KAA+C,kCA5B9F,GAAyBW,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.dbd91f42.chunk.js","sourcesContent":["// import React from 'react';\nimport { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  constructor(props: {}) {\n    super(props);\n\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp(event: KeyboardEvent) {\n    this.setState({ pressedKey: event.key });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{pressedKey ? `The last pressed key is [${pressedKey}]` : 'Nothing was pressed yet'}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}